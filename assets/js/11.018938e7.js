(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{384:function(e,t,o){"use strict";o.r(t);var s=o(42),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"project-setup"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#project-setup"}},[e._v("#")]),e._v(" Project Setup")]),e._v(" "),o("h2",{attrs:{id:"install-deno"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#install-deno"}},[e._v("#")]),e._v(" Install Deno")]),e._v(" "),o("p",[e._v("Haven't installed Deno yet? Head to the "),o("a",{attrs:{href:"https://deno.land",target:"_blank",rel:"noopener noreferrer"}},[e._v("website"),o("OutboundLink")],1),e._v(", its just about running a single command!")]),e._v(" "),o("p",[e._v("Well, there isn't anything else you'll need except Deno. But it's good to have an IDE, or just Editor, and in this case, "),o("a",{attrs:{href:"https://code.visualstudio.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("VS Code"),o("OutboundLink")],1),e._v(" serves very well. Though JetBrains IDE support Deno with a Plugin too.")]),e._v(" "),o("h2",{attrs:{id:"vs-code-setup"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#vs-code-setup"}},[e._v("#")]),e._v(" VS Code Setup")]),e._v(" "),o("p",[e._v('If you are using VS Code (recommended), go ahead and install "VSCode Deno" extension for complete Deno support.\nOpen VS Code in your project directory, and add a new directory '),o("code",[e._v(".vscode")]),e._v(" with a file "),o("code",[e._v("settings.json")]),e._v(" in it.\nWrite the following contents into the file,")]),e._v(" "),o("div",{staticClass:"language-json extra-class"},[o("pre",{pre:!0,attrs:{class:"language-json"}},[o("code",[o("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),o("span",{pre:!0,attrs:{class:"token property"}},[e._v('"deno.enable"')]),o("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),o("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),e._v("\n"),o("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),o("p",[e._v("And boom! Deno enabled in your directory! If you are having issues, try reloading VS Code.")]),e._v(" "),o("p",[e._v("If you come from a "),o("a",{attrs:{href:"https://nodejs.org",target:"_blank",rel:"noopener noreferrer"}},[e._v("Node.js"),o("OutboundLink")],1),e._v(" background, you're probably used to "),o("code",[e._v("index.js")]),e._v(" or "),o("code",[e._v("main.js")]),e._v(" file names, but here in Deno, the convention of "),o("code",[e._v("mod.ts")]),e._v(" (ts here is for TypeScript, you may use "),o("code",[e._v(".js")]),e._v(") is used.\nAnd since there's no "),o("code",[e._v("package.json")]),e._v(" in Deno, you might find it better to have a "),o("code",[e._v("deps.ts")]),e._v(" file to export your third party modules! Here's an example how to export Harmony from there,")]),e._v(" "),o("div",{staticClass:"language-ts extra-class"},[o("pre",{pre:!0,attrs:{class:"language-ts"}},[o("code",[o("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("export")]),e._v(" "),o("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),e._v(" "),o("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("from")]),e._v(" "),o("span",{pre:!0,attrs:{class:"token string"}},[e._v("'https://deno.land/x/harmony@v0.9.1'")]),e._v("\n")])])]),o("p",[e._v("and you can just import Harmony lib exports from local "),o("code",[e._v("deps.ts")]),e._v("! It's a good way to maintain the third party modules you're using.")]),e._v(" "),o("p",[e._v("Now you're good to go! Let's start writing a simple bot in the next section.")])])}),[],!1,null,null,null);t.default=n.exports}}]);